<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.miujike.worksservice.mapper.MusicMapper">

    <resultMap id="BaseResultMap" type="com.miujike.worksservice.mapper.MusicMapper">
        <id column="music_id" property="musicId"/>
        <result column="user_id" property="userId"/>
        <result column="singer" property="singer"/>
        <result column="title" property="title"/>
        <result column="detail" property="detail"/>
        <result column="music_url" property="musicUrl"/>
        <result column="cover" property="cover"/>
        <result column="duration" property="duration"/>
        <result column="status" property="status"/>
        <result column="create_time" property="createTime"/>
        <result column="release_time" property="releaseTime"/>
        <result column="eggs" property="eggs"/>
        <result column="thumbs" property="thumbs"/>
        <result column="comments" property="comments"/>
        <result column="original_singer" property="originalSinger"/>
        <result column="play_times" property="playTimes"/>
        <result column="shares" property="shares"/>
    </resultMap>
    <sql id="Base_Column_List">
        music_id as musicId,user_id as userId,singer,title,detail,
        music_url as musicUrl,duration,status,create_time as createTime,
        release_time as releaseTime,eggs,thumbs,comments,original_singer as original_singer,
        play_times as playTimes,shares
    </sql>

    <select id="getUserMusicList" parameterType="map" resultType="map">
        select music_id as musicId,music_url as musicUrl,singer ,user_id as userId,
        original_singer as originalSinger,play_times as playTimes,cover,shares,
        title,duration
        from miu_music
        <if test='userId == 0'>
            where user_id != 0
        </if>
        <if test='userId != 0'>
            where user_id = #{userId}
        </if>
        <if test='lastId != 0'>
            <![CDATA[
                and music_id < #{lastId}
            ]]>
        </if>
        and status = 1
        order by music_id desc
        limit #{fetchNum}
    </select>

    <!--查找最流行的音乐列表-->
    <select id="getPopularMusicList" resultType="map">
        select music_id as musicId,music_url as musicUrl,singer ,user_id as userId,
        original_singer as originalSinger,play_times as playTimes,cover,shares,
        title,duration,thumbs
        from miu_music
        where status = 1
        order by thumbs desc
        limit 100
    </select>

    <select id="getNewMusicList" parameterType="int" resultType="map">
        select music_id as musicId,music_url as musicUrl,singer ,user_id as userId,
        original_singer as originalSinger,play_times as playTimes,cover,shares,
        title,duration
        from miu_music
        where status = 1
        order by release_time desc
        limit #{n}
    </select>

    <!--获取喜欢的音乐-->
    <select id="getUserMusicListLike" parameterType="map" resultType="map">
        select distinct mt.target_id as musicId,mm.music_url as musicUrl,mm.singer ,mm.user_id as userId,
        mm.original_singer as originalSinger,mm.play_times as playTimes,mm.cover,mm.title,mm.duration,mt.thumb_id as thumbId
        from miu_music mm right join miu_thumb mt on mt.target_id = mm.music_id
        where mt.target_type = 1
        and mt.from_user_id = #{userId}
        <if test='lastId != 0'>
            <![CDATA[
                and mt.thumb_id < #{lastId}
            ]]>
        </if>
        and mm.status = 1
        order by mt.thumb_id desc
        limit #{fetchNum}
    </select>

    <!--关键词搜索,限制在100条以内-->
    <select id="listByKeyword" parameterType="map" resultType="map">
        select music_id as musicId,music_url as musicUrl,singer ,user_id as userId,
        original_singer as originalSinger,play_times as playTimes,cover,shares,
        title,duration
        from miu_music
        where singer like #{searchMode} or title like #{searchMode}
        or original_singer like #{searchMode}
        or detail like #{searchMode}
        and status = 1
        order by music_id desc
        limit 100
    </select>
</mapper>